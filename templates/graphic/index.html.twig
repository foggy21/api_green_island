{% extends "base.html.twig" %}

{% block title %}График метрики{% endblock %}

{% block stylesheets %}
    <style>
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
        }
        .modal-content {
            color: #FFF;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
{% endblock %}

{% block body %}
    <canvas id="myChart"></canvas>

    <div id="modal" class="modal">
        <div class="modal-content">
            <p>Посещения: <span id="visits"></span></p>
            <p>Дата: <span id="date"></span></p>
            {{ include('task/_form.html.twig') }}
            <button class="btn btn-secondary close">Закрыть</button>
        </div>
    </div>

    <script>
         const taskData = [
            {% for task in needleTasks %}
                {
                    x: '{{ task.start_date }}',
                    y: {{ task.result }},
                },
            {% endfor %}
        ];

        const filteredTaskData = taskData.filter(task => {
            return {{ dateInterval | json_encode | raw }}.includes(task.x);
        });

        const handlePointClick = (selectedIndex, label) => {
            if (label == 'Посещения') {
                const selectedDate = myChart.data.labels[selectedIndex];
                const selectedVisits = myChart.data.datasets[0].data[selectedIndex];

                var selectedDateObject = new Date(selectedDate);
                document.getElementById('task_start_date').value = selectedDateObject.toISOString().split('T')[0];
                document.getElementById('task_result').value = 0;
                console.log(document.getElementById('task_result'))

                document.getElementById('visits').innerText = selectedVisits;
                document.getElementById('date').innerText = selectedDate;
                document.getElementById('modal').style.display = 'block';
            } else if (label == 'Задача (Стоимость задачи)') {
                const selectedTask = filteredTaskData[selectedIndex];
                let url = `https://gn-tst.ideavl.ru/company/personal/user/12601/tasks/task/view/${selectedTask.y}/`;
                window.open(url, '_blank');
            }
        };

        const ctx = document.getElementById('myChart').getContext('2d');
        const modal = document.querySelector('#modal');
        const modalTask = document.querySelector('#modal-task');
        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: 
                    {{ dateInterval | json_encode | raw }}, 
                datasets: [
                    {
                        label: 'Посещения',
                        data: {{ totals | json_encode | raw }},
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1,
                    },
                    {
                        label: 'Задача (Стоимость задачи)',
                        data: filteredTaskData,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1,
                    },
                ],
            },
            options: {
                hoverRadius: 10,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                        },
                    }],
                },
                onClick: (e) => {
                    var activePoints = myChart.getElementsAtEventForMode(e, 'nearest', { intersect: true }, false);
                    if (activePoints.length > 0) {
                        const selectedIndex = activePoints[0].index;
                        const label = myChart.data.datasets[activePoints[0].datasetIndex].label;
                        handlePointClick(selectedIndex, label);
                    }
                },
            },
        });

        modal.addEventListener('click', function(event) {
            if (event.target.classList.contains('close')) {
                modal.style.display = 'none';
            }
        });
    </script>
{% endblock %}